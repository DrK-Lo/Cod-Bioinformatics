partition <- if(i < 150){
"#SBATCH --partition=lotterhos"
} else {
"#SBATCH --partition=short"
}
#else {
#   "#SBATCH --partition=short"
# }
writeLines(c("#!/bin/bash",
paste0("#SBATCH --job-name=picardMarkDup", sampleNames$ID[i]),
"#SBATCH --mem=10Gb",
"#SBATCH --mail-user=schaal.s@northeastern.edu",
"#SBATCH --mail-type=FAIL",
partition,
"#SBATCH --time=4:00:00",
"#SBATCH --cpus-per-task=1",
"#SBATCH --output=../picard_Out/clustOut/picard.%j.out",
paste0("#SBATCH --error=../picard_Out/clustOut/picard.%j.", sampleNames$ID[i], ".err"),
"source activate lotterhos_utils_sara",
paste0("picard MarkDuplicates I=../samtools_sortedBam_Out/", sampleNames$ID[i],
"aln.sorted.bam O=../picard_Out/", sampleNames$ID[i], "aln.sorted.md.bam M=",
sampleNames$ID[i], "md_metrics.txt OPTICAL_DUPLICATE_PIXEL_DISTANCE=2500 TAGGING_POLICY=OpticalOnly &> ../picard_Out/logFiles/",
sampleNames$ID[i], "aln.sorted.md.log", sep = "")
), fileConn)
}
for(i in 1:nrow(sampleNames)){
#filename <- as.character(sampleNames$ID[i])
fileConn <- file(print(paste("src/picard/submissionFiles/", sampleNames$ID[i], "_submitPicard.sh", sep="")))
partition <- if(i < 150){
"#SBATCH --partition=lotterhos"
} else {
"#SBATCH --partition=short"
}
#else {
#   "#SBATCH --partition=short"
# }
writeLines(c("#!/bin/bash",
paste0("#SBATCH --job-name=picardMarkDup", sampleNames$ID[i]),
"#SBATCH --mem=10Gb",
"#SBATCH --mail-user=schaal.s@northeastern.edu",
"#SBATCH --mail-type=FAIL",
partition,
"#SBATCH --time=4:00:00",
"#SBATCH --cpus-per-task=1",
"#SBATCH --output=../picard_Out/clustOut/picard.%j.out",
paste0("#SBATCH --error=../picard_Out/clustOut/picard.%j.", sampleNames$ID[i], ".err"),
"source activate lotterhos_utils_sara",
paste0("picard MarkDuplicates I=../samtools_sortedBam_Out/", sampleNames$ID[i],
"aln.sorted.bam O=../picard_Out/", sampleNames$ID[i], "aln.sorted.md.bam M=../picard_Out/logFiles/",
sampleNames$ID[i], "md_metrics.txt OPTICAL_DUPLICATE_PIXEL_DISTANCE=2500 TAGGING_POLICY=OpticalOnly &> ../picard_Out/logFiles/",
sampleNames$ID[i], "aln.sorted.md.log", sep = "")
), fileConn)
}
ls
for(i in 1:nrow(sampleNames)){
#filename <- as.character(sampleNames$ID[i])
fileConn <- file(print(paste("src/samtoolsFilter/submissionFiles", sampleNames$ID[i], "_submitFilter.sh", sep="")))
partition <- if(i < 300){
"#SBATCH --partition=lotterhos"
} else if(i >= 46 & i < 150){
"#SBATCH --partition=short"
} else {
"#SBATCH --partition=express"
}
writeLines(c("#!/bin/bash",
"#SBATCH --job-name=picardMarkDup",
"#SBATCH --mem=5Gb",
"#SBATCH --mail-user=schaal.s@northeastern.edu",
"#SBATCH --mail-type=FAIL",
partition,
"#SBATCH --time=1:00:00",
"#SBATCH --cpus-per-task=2",
"#SBATCH --output=samtools_filter_Out/clustOut/samtoolsFilter.%j.out",
"#SBATCH --error=samtools_filter_Out/clustOut/samtoolsFilter.%j.err",
"source activate lotterhos_utils_sara",
paste0("samtools view -@32 -h -q 10 -F 0x100 -F 0x400 ", sampleNames$ID[i], "RGmd.bam | mawk '$6 !~/[8-9].[SH]/ && $6 !~ /[1-9][0-9].[SH]/'| samtools view -@ 32 -b", sep = "")
), fileConn)
}
for(i in 1:nrow(sampleNames)){
#filename <- as.character(sampleNames$ID[i])
fileConn <- file(print(paste("src/samtoolsFilter/submissionFiles", sampleNames$ID[i], "_submitFilter.sh", sep="")))
partition <- if(i < 300){
"#SBATCH --partition=lotterhos"
} else if(i >= 46 & i < 150){
"#SBATCH --partition=short"
} else {
"#SBATCH --partition=express"
}
writeLines(c("#!/bin/bash",
"#SBATCH --job-name=picardMarkDup",
"#SBATCH --mem=5Gb",
"#SBATCH --mail-user=schaal.s@northeastern.edu",
"#SBATCH --mail-type=FAIL",
partition,
"#SBATCH --time=1:00:00",
"#SBATCH --cpus-per-task=2",
"#SBATCH --output=samtools_filter_Out/clustOut/samtoolsFilter.%j.out",
"#SBATCH --error=samtools_filter_Out/clustOut/samtoolsFilter.%j.err",
"source activate lotterhos_utils_sara",
paste0("samtools view -@32 -h -q 10 -F 0x100 -F 0x400 ", sampleNames$ID[i], "RGmd.bam | mawk '$6 !~/[8-9].[SH]/ && $6 !~ /[1-9][0-9].[SH]/'| samtools view -@ 32 -b", sep = "")
), fileConn)
}
for(i in 1:nrow(sampleNames)){
#filename <- as.character(sampleNames$ID[i])
fileConn <- file(print(paste("src/samtoolsFilter/submissionFiles/", sampleNames$ID[i], "_submitFilter.sh", sep="")))
partition <- if(i < 300){
"#SBATCH --partition=lotterhos"
} else if(i >= 46 & i < 150){
"#SBATCH --partition=short"
} else {
"#SBATCH --partition=express"
}
writeLines(c("#!/bin/bash",
"#SBATCH --job-name=picardMarkDup",
"#SBATCH --mem=5Gb",
"#SBATCH --mail-user=schaal.s@northeastern.edu",
"#SBATCH --mail-type=FAIL",
partition,
"#SBATCH --time=1:00:00",
"#SBATCH --cpus-per-task=2",
"#SBATCH --output=samtools_filter_Out/clustOut/samtoolsFilter.%j.out",
"#SBATCH --error=samtools_filter_Out/clustOut/samtoolsFilter.%j.err",
"source activate lotterhos_utils_sara",
paste0("samtools view -@32 -h -q 10 -F 0x100 -F 0x400 ", sampleNames$ID[i], "RGmd.bam | mawk '$6 !~/[8-9].[SH]/ && $6 !~ /[1-9][0-9].[SH]/'| samtools view -@ 32 -b", sep = "")
), fileConn)
}
i <- 1
sampleNames$ID[i]
sampleNames <- read.csv("src/SampleNames.txt", header = FALSE)
colnames(sampleNames) <- "ID"
for(i in 1:nrow(sampleNames)){
#filename <- as.character(sampleNames$ID[i])
fileConn <- file(print(paste("src/samtoolsFilter/test/", sampleNames$ID[i], "_testSubmitFilter.sh", sep="")))
partition <- if(i < 300){
"#SBATCH --partition=lotterhos"
} else if(i >= 46 & i < 150){
"#SBATCH --partition=short"
} else {
"#SBATCH --partition=express"
}
writeLines(c("#!/bin/bash",
"#SBATCH --job-name=picardMarkDup",
"#SBATCH --mem=5Gb",
"#SBATCH --mail-user=schaal.s@northeastern.edu",
"#SBATCH --mail-type=FAIL",
partition,
"#SBATCH --time=1:00:00",
"#SBATCH --cpus-per-task=2",
"#SBATCH --output=samtools_filter_Out/clustOut/samtoolsFilter.%j.out",
"#SBATCH --error=samtools_filter_Out/clustOut/samtoolsFilter.%j.err",
"source activate lotterhos_utils_sara",
paste0("samtools view -@32 -h -q 10 -F 0x100 -F 0x400 ", sampleNames$ID[i], "| mawk '$6 !~ /[1-9][0-9].[SH]/'| samtools view -@ 32 -b", sep = "")
), fileConn)
}
writeLines(c("#!/bin/bash",
"#SBATCH --job-name=picardMarkDup",
"#SBATCH --mem=5Gb",
"#SBATCH --mail-user=schaal.s@northeastern.edu",
"#SBATCH --mail-type=FAIL",
partition,
"#SBATCH --time=1:00:00",
"#SBATCH --cpus-per-task=2",
"#SBATCH --output=samtools_filter_Out/clustOut/samtoolsFilter.%j.out",
"#SBATCH --error=samtools_filter_Out/clustOut/samtoolsFilter.%j.err",
"source activate lotterhos_utils_sara",
paste0("samtools view -@32 -h -q 10 -F 0x100 -F 0x400 picard_Out/", sampleNames$ID[i], "aln.sorted.md.bam | mawk '$6 !~ /[1-9][0-9].[SH]/'| samtools view -@ 32 -b", sep = "")
), fileConn)
paste0("samtools view -@32 -h -q 10 -F 0x100 -F 0x400 picard_Out/", sampleNames$ID[i], "aln.sorted.md.bam | mawk '$6 !~ /[1-9][0-9].[SH]/'| samtools view -@ 32 -b", sep = "")
paste0("picard AddOrReplaceReadGroups I=", sampleNames$ID[i], ".f.bam O=../samtools_filter_Out/",
sampleNames$ID[i], ".f.bam RGID=",  sampleNames$ID[i], " RGSM=",  sampleNames$ID[i],
" RGPL=Illumina RGLB=lib1 TGPU=unit1")
warnings()
paste0("picard AddOrReplaceReadGroups I=", sampleNames$ID[i], ".f.bam O=../samtools_filter_Out/",
sampleNames$ID[i], ".f.bam RGID=",  sampleNames$ID[i], " RGSM=",  sampleNames$ID[i],
" RGPL=Illumina RGLB=lib1 TGPU=unit1")
paste0("samtools view -@2 -h -q 10 -F 0x100 -F 0x400 picard_Out/", sampleNames$ID[i],
"aln.sorted.md.bam | mawk '$6 !~ /[1-9][0-9].[SH]/'| samtools view -@2 -b > ",
sampleNames$ID[i], "f.bam", sep = "")
paste0("samtools view -@2 -h -q 10 -F 0x100 -F 0x400 ../samtools_filter_Out/", sampleNames$ID[i],
"aln.sorted.md.bam | mawk '$6 !~ /[1-9][0-9].[SH]/'| samtools view -@2 -b > ",
sampleNames$ID[i], "f.bam", sep = "")
paste0("picard AddOrReplaceReadGroups I=", sampleNames$ID[i], ".f.bam O=../samtools_filter_Out/",
sampleNames$ID[i], ".f.bam RGID=",  sampleNames$ID[i], " RGSM=",  sampleNames$ID[i],
" RGPL=Illumina RGLB=lib1 TGPU=unit1")
sampleNames <- read.csv("src/SampleNames.txt", header = FALSE)
colnames(sampleNames) <- "ID"
for(i in 1:nrow(sampleNames)){
#filename <- as.character(sampleNames$ID[i])
fileConn <- file(print(paste("src/samtoolsFilter/", sampleNames$ID[i], "_submitFilter.sh", sep="")))
partition <- if(i < 300){
"#SBATCH --partition=lotterhos"
} else if(i >= 46 & i < 150){
"#SBATCH --partition=short"
} else {
"#SBATCH --partition=express"
}
writeLines(c("#!/bin/bash",
"#SBATCH --job-name=picardMarkDup",
"#SBATCH --mem=5Gb",
"#SBATCH --mail-user=schaal.s@northeastern.edu",
"#SBATCH --mail-type=FAIL",
partition,
"#SBATCH --time=1:00:00",
"#SBATCH --cpus-per-task=2",
"#SBATCH --output=samtools_filter_Out/clustOut/samtoolsFilter.%j.out",
"#SBATCH --error=samtools_filter_Out/clustOut/samtoolsFilter.%j.err",
"source activate lotterhos_utils_sara",
paste0("samtools view -@2 -h -q 10 -F 0x100 -F 0x400 ../picard_Out/", sampleNames$ID[i],
"aln.sorted.md.bam | mawk '$6 !~ /[1-9][0-9].[SH]/'| samtools view -@2 -b > ",
sampleNames$ID[i], "f.bam", sep = ""),
"wait",
paste0("picard AddOrReplaceReadGroups I=", sampleNames$ID[i], ".f.bam O=../samtools_filter_Out/",
sampleNames$ID[i], ".f.bam RGID=",  sampleNames$ID[i], " RGSM=",  sampleNames$ID[i],
" RGPL=Illumina RGLB=lib1 TGPU=unit1")
), fileConn)
}
for(i in 1:nrow(sampleNames)){
#filename <- as.character(sampleNames$ID[i])
fileConn <- file(print(paste("src/samtoolsFilter/submissionFiles/", sampleNames$ID[i], "_submitFilter.sh", sep="")))
partition <- if(i < 300){
"#SBATCH --partition=lotterhos"
} else if(i >= 46 & i < 150){
"#SBATCH --partition=short"
} else {
"#SBATCH --partition=express"
}
writeLines(c("#!/bin/bash",
"#SBATCH --job-name=picardMarkDup",
"#SBATCH --mem=5Gb",
"#SBATCH --mail-user=schaal.s@northeastern.edu",
"#SBATCH --mail-type=FAIL",
partition,
"#SBATCH --time=1:00:00",
"#SBATCH --cpus-per-task=2",
"#SBATCH --output=samtools_filter_Out/clustOut/samtoolsFilter.%j.out",
"#SBATCH --error=samtools_filter_Out/clustOut/samtoolsFilter.%j.err",
"source activate lotterhos_utils_sara",
paste0("samtools view -@2 -h -q 10 -F 0x100 -F 0x400 ../picard_Out/", sampleNames$ID[i],
"aln.sorted.md.bam | mawk '$6 !~ /[1-9][0-9].[SH]/'| samtools view -@2 -b > ",
sampleNames$ID[i], "f.bam", sep = ""),
"wait",
paste0("picard AddOrReplaceReadGroups I=", sampleNames$ID[i], ".f.bam O=../samtools_filter_Out/",
sampleNames$ID[i], ".f.bam RGID=",  sampleNames$ID[i], " RGSM=",  sampleNames$ID[i],
" RGPL=Illumina RGLB=lib1 TGPU=unit1")
), fileConn)
}
for(i in 1:nrow(sampleNames)){
#filename <- as.character(sampleNames$ID[i])
fileConn <- file(print(paste("src/samtoolsFilter/submissionFiles/", sampleNames$ID[i], "_submitFilter.sh", sep="")))
partition <- if(i < 300){
"#SBATCH --partition=lotterhos"
} else if(i >= 46 & i < 150){
"#SBATCH --partition=short"
} else {
"#SBATCH --partition=express"
}
writeLines(c("#!/bin/bash",
"#SBATCH --job-name=picardMarkDup",
"#SBATCH --mem=750Mb",
"#SBATCH --mail-user=schaal.s@northeastern.edu",
"#SBATCH --mail-type=FAIL",
partition,
"#SBATCH --time=0:30:00",
"#SBATCH --cpus-per-task=2",
"#SBATCH --output=samtools_filter_Out/clustOut/samtoolsFilter.%j.out",
"#SBATCH --error=samtools_filter_Out/clustOut/samtoolsFilter.%j.err",
"source activate lotterhos_utils_sara",
paste0("samtools view -@2 -h -q 10 -F 0x100 -F 0x400 ../picard_Out/", sampleNames$ID[i],
"aln.sorted.md.bam | mawk '$6 !~ /[1-9][0-9].[SH]/'| samtools view -@2 -b > ",
sampleNames$ID[i], "f.bam", sep = ""),
"wait",
paste0("picard AddOrReplaceReadGroups I=", sampleNames$ID[i], ".f.bam O=../samtools_filter_Out/",
sampleNames$ID[i], ".f.bam RGID=",  sampleNames$ID[i], " RGSM=",  sampleNames$ID[i],
" RGPL=Illumina RGLB=lib1 TGPU=unit1")
), fileConn)
}
for(i in 1:nrow(sampleNames)){
#filename <- as.character(sampleNames$ID[i])
fileConn <- file(print(paste("src/samtoolsFilter/submissionFiles/", sampleNames$ID[i], "_submitFilter.sh", sep="")))
partition <- if(i < 300){
"#SBATCH --partition=lotterhos"
} else if(i >= 46 & i < 150){
"#SBATCH --partition=short"
} else {
"#SBATCH --partition=express"
}
writeLines(c("#!/bin/bash",
"#SBATCH --job-name=picardMarkDup",
"#SBATCH --mem=750Mb",
"#SBATCH --mail-user=schaal.s@northeastern.edu",
"#SBATCH --mail-type=FAIL",
partition,
"#SBATCH --time=0:30:00",
"#SBATCH --cpus-per-task=2",
"#SBATCH --output=samtools_filter_Out/clustOut/samtoolsFilter.%j.out",
"#SBATCH --error=samtools_filter_Out/clustOut/samtoolsFilter.%j.err",
"source activate lotterhos_utils_sara",
paste0("samtools view -@2 -h -q 10 -F 0x100 -F 0x400 ../picard_Out/", sampleNames$ID[i],
"aln.sorted.md.bam | mawk '$6 !~ /[1-9][0-9].[SH]/'| samtools view -@2 -b > ",
sampleNames$ID[i], ".f.bam", sep = ""),
"wait",
paste0("picard AddOrReplaceReadGroups I=", sampleNames$ID[i], ".f.bam O=../samtools_filter_Out/",
sampleNames$ID[i], ".f.bam RGID=",  sampleNames$ID[i], " RGSM=",  sampleNames$ID[i],
" RGPL=Illumina RGLB=lib1 TGPU=unit1")
), fileConn)
}
for(i in 1:nrow(sampleNames)){
#filename <- as.character(sampleNames$ID[i])
fileConn <- file(print(paste("src/samtoolsFilter/submissionFiles/", sampleNames$ID[i], "_submitFilter.sh", sep="")))
partition <- if(i < 300){
"#SBATCH --partition=lotterhos"
} else if(i >= 46 & i < 150){
"#SBATCH --partition=short"
} else {
"#SBATCH --partition=express"
}
writeLines(c("#!/bin/bash",
"#SBATCH --job-name=picardMarkDup",
"#SBATCH --mem=750Mb",
"#SBATCH --mail-user=schaal.s@northeastern.edu",
"#SBATCH --mail-type=FAIL",
partition,
"#SBATCH --time=0:30:00",
"#SBATCH --cpus-per-task=2",
"#SBATCH --output=../samtools_filter_Out/clustOut/samtoolsFilter.%j.out",
"#SBATCH --error=../samtools_filter_Out/clustOut/samtoolsFilter.%j.err",
"source activate lotterhos_utils_sara",
paste0("samtools view -@2 -h -q 10 -F 0x100 -F 0x400 ../picard_Out/", sampleNames$ID[i],
"aln.sorted.md.bam | mawk '$6 !~ /[1-9][0-9].[SH]/'| samtools view -@2 -b > ../samtools_filter_Out/",
sampleNames$ID[i], ".f.bam", sep = ""),
"wait",
paste0("picard AddOrReplaceReadGroups I=../samtools_filter_Out/", sampleNames$ID[i],
".f.bam O=../samtools_filter_Out/", sampleNames$ID[i], ".f.bam RGID=",
sampleNames$ID[i], " RGSM=",  sampleNames$ID[i],
" RGPL=Illumina RGLB=lib1 TGPU=unit1")
), fileConn)
}
for(i in 1:nrow(sampleNames)){
#filename <- as.character(sampleNames$ID[i])
fileConn <- file(print(paste("src/samtoolsFilter/submissionFiles/", sampleNames$ID[i], "_submitFilter.sh", sep="")))
partition <- if(i < 300){
"#SBATCH --partition=lotterhos"
} else if(i >= 46 & i < 150){
"#SBATCH --partition=short"
} else {
"#SBATCH --partition=express"
}
writeLines(c("#!/bin/bash",
"#SBATCH --job-name=picardMarkDup",
"#SBATCH --mem=750Mb",
"#SBATCH --mail-user=schaal.s@northeastern.edu",
"#SBATCH --mail-type=FAIL",
partition,
"#SBATCH --time=0:30:00",
"#SBATCH --cpus-per-task=2",
"#SBATCH --output=../samtools_filter_Out/clustOut/samtoolsFilter.%j.out",
"#SBATCH --error=../samtools_filter_Out/clustOut/samtoolsFilter.%j.err",
"source activate lotterhos_utils_sara",
paste0("samtools view -@2 -h -q 10 -F 0x100 -F 0x400 ../picard_Out/", sampleNames$ID[i],
"aln.sorted.md.bam | mawk '$6 !~ /[1-9][0-9].[SH]/'| samtools view -@2 -b > ../samtools_filter_Out/",
sampleNames$ID[i], ".f.bam", sep = ""),
"wait",
paste0("picard AddOrReplaceReadGroups I=../samtools_filter_Out/", sampleNames$ID[i],
".f.bam O=../samtools_filter_Out/", sampleNames$ID[i], ".f.rg.bam RGID=",
sampleNames$ID[i], " RGSM=",  sampleNames$ID[i],
" RGPL=Illumina RGLB=lib1 TGPU=unit1")
), fileConn)
}
writeLines(c("#!/bin/bash",
"#SBATCH --job-name=picardMarkDup",
"#SBATCH --mem=750Mb",
"#SBATCH --mail-user=schaal.s@northeastern.edu",
"#SBATCH --mail-type=FAIL",
partition,
"#SBATCH --time=0:30:00",
"#SBATCH --cpus-per-task=2",
"#SBATCH --output=../samtools_filter_Out/clustOut/samtoolsFilter.%j.out",
"#SBATCH --error=../samtools_filter_Out/clustOut/samtoolsFilter.%j.err",
"source activate lotterhos_utils_sara",
paste0("samtools view -@2 -h -q 10 -F 0x100 -F 0x400 ../picard_Out/", sampleNames$ID[i],
"aln.sorted.md.bam | mawk '$6 !~ /[1-9][0-9].[SH]/'| samtools view -@2 -b > ../samtools_filter_Out/",
sampleNames$ID[i], ".f.bam", sep = ""),
"wait",
paste0("picard AddOrReplaceReadGroups I=../samtools_filter_Out/", sampleNames$ID[i],
".f.bam O=../labeled_bam_Out/", sampleNames$ID[i], ".f.rg.bam RGID=",
sampleNames$ID[i], " RGSM=",  sampleNames$ID[i],
" RGPL=Illumina RGLB=lib1 TGPU=unit1")
), fileConn)
for(i in 1:nrow(sampleNames)){
#filename <- as.character(sampleNames$ID[i])
fileConn <- file(print(paste("src/samtoolsFilter/submissionFiles/", sampleNames$ID[i], "_submitFilter.sh", sep="")))
partition <- if(i < 300){
"#SBATCH --partition=lotterhos"
} else if(i >= 46 & i < 150){
"#SBATCH --partition=short"
} else {
"#SBATCH --partition=express"
}
writeLines(c("#!/bin/bash",
"#SBATCH --job-name=picardMarkDup",
"#SBATCH --mem=750Mb",
"#SBATCH --mail-user=schaal.s@northeastern.edu",
"#SBATCH --mail-type=FAIL",
partition,
"#SBATCH --time=0:30:00",
"#SBATCH --cpus-per-task=2",
"#SBATCH --output=../samtools_filter_Out/clustOut/samtoolsFilter.%j.out",
"#SBATCH --error=../samtools_filter_Out/clustOut/samtoolsFilter.%j.err",
"source activate lotterhos_utils_sara",
paste0("samtools view -@2 -h -q 10 -F 0x100 -F 0x400 ../picard_Out/", sampleNames$ID[i],
"aln.sorted.md.bam | mawk '$6 !~ /[1-9][0-9].[SH]/'| samtools view -@2 -b > ../samtools_filter_Out/",
sampleNames$ID[i], ".f.bam", sep = ""),
"wait",
paste0("picard AddOrReplaceReadGroups I=../samtools_filter_Out/", sampleNames$ID[i],
".f.bam O=../labeled_bam_Out/", sampleNames$ID[i], ".f.rg.bam RGID=",
sampleNames$ID[i], " RGSM=",  sampleNames$ID[i],
" RGPL=Illumina RGLB=lib1 TGPU=unit1")
), fileConn)
}
for(i in 1:nrow(sampleNames)){
#filename <- as.character(sampleNames$ID[i])
fileConn <- file(print(paste("src/samtoolsFilter/submissionFiles/", sampleNames$ID[i], "_submitFilter.sh", sep="")))
partition <- if(i < 300){
"#SBATCH --partition=lotterhos"
} else if(i >= 46 & i < 150){
"#SBATCH --partition=short"
} else {
"#SBATCH --partition=express"
}
writeLines(c("#!/bin/bash",
"#SBATCH --job-name=picardMarkDup",
"#SBATCH --mem=750Mb",
"#SBATCH --mail-user=schaal.s@northeastern.edu",
"#SBATCH --mail-type=FAIL",
partition,
"#SBATCH --time=0:30:00",
"#SBATCH --cpus-per-task=2",
"#SBATCH --output=../samtools_filter_Out/clustOut/samtoolsFilter.%j.out",
"#SBATCH --error=../samtools_filter_Out/clustOut/samtoolsFilter.%j.err",
"source activate lotterhos_utils_sara",
paste0("samtools view -@2 -h -q 10 -F 0x100 -F 0x400 ../picard_Out/", sampleNames$ID[i],
"aln.sorted.md.bam | mawk '$6 !~ /[1-9][0-9].[SH]/'| samtools view -@2 -b > ../samtools_filter_Out/",
sampleNames$ID[i], ".f.bam", sep = ""),
"wait",
paste0("picard AddOrReplaceReadGroups I=../samtools_filter_Out/", sampleNames$ID[i],
".f.bam O=../labeled_bam_Out/", sampleNames$ID[i], ".f.rg.bam RGID=",
sampleNames$ID[i], " RGSM=",  sampleNames$ID[i],
" RGPL=Illumina RGLB=lib1 RGPU=unit1")
), fileConn)
}
for(i in 1:nrow(sampleNames)){
#filename <- as.character(sampleNames$ID[i])
fileConn <- file(print(paste("src/samtoolsFilter/submissionFiles/", sampleNames$ID[i], "_submitFilter.sh", sep="")))
partition <- if(i < 150){
"#SBATCH --partition=lotterhos"
} else if(i >= 150 & i < 300){
"#SBATCH --partition=short"
} else {
"#SBATCH --partition=express"
}
writeLines(c("#!/bin/bash",
"#SBATCH --job-name=picardMarkDup",
"#SBATCH --mem=750Mb",
"#SBATCH --mail-user=schaal.s@northeastern.edu",
"#SBATCH --mail-type=FAIL",
partition,
"#SBATCH --time=0:30:00",
"#SBATCH --cpus-per-task=2",
"#SBATCH --output=../samtools_filter_Out/clustOut/samtoolsFilter.%j.out",
"#SBATCH --error=../samtools_filter_Out/clustOut/samtoolsFilter.%j.err",
"source activate lotterhos_utils_sara",
paste0("samtools view -@2 -h -q 10 -F 0x100 -F 0x400 ../picard_Out/", sampleNames$ID[i],
"aln.sorted.md.bam | mawk '$6 !~ /[1-9][0-9].[SH]/'| samtools view -@2 -b > ../samtools_filter_Out/",
sampleNames$ID[i], ".f.bam", sep = ""),
"wait",
paste0("picard AddOrReplaceReadGroups I=../samtools_filter_Out/", sampleNames$ID[i],
".f.bam O=../labeled_bam_Out/", sampleNames$ID[i], ".f.rg.bam RGID=",
sampleNames$ID[i], " RGSM=",  sampleNames$ID[i],
" RGPL=Illumina RGLB=lib1 RGPU=unit1")
), fileConn)
}
for(i in 1:nrow(sampleNames)){
#filename <- as.character(sampleNames$ID[i])
fileConn <- file(print(paste("src/samtoolsFilter/submissionFiles/", sampleNames$ID[i], "_submitFilter.sh", sep="")))
partition <- if(i < 150){
"#SBATCH --partition=lotterhos"
} else if(i >= 150 & i < 300){
"#SBATCH --partition=short"
} else {
"#SBATCH --partition=express"
}
writeLines(c("#!/bin/bash",
"#SBATCH --job-name=samtoolsFilter",
"#SBATCH --mem=750Mb",
"#SBATCH --mail-user=schaal.s@northeastern.edu",
"#SBATCH --mail-type=FAIL",
partition,
"#SBATCH --time=0:30:00",
"#SBATCH --cpus-per-task=2",
"#SBATCH --output=../samtools_filter_Out/clustOut/samtoolsFilter.%j.out",
"#SBATCH --error=../samtools_filter_Out/clustOut/samtoolsFilter.%j.err",
"source activate lotterhos_utils_sara",
paste0("samtools view -@2 -h -q 10 -F 0x100 -F 0x400 ../picard_Out/", sampleNames$ID[i],
"aln.sorted.md.bam | mawk '$6 !~ /[1-9][0-9].[SH]/'| samtools view -@2 -b > ../samtools_filter_Out/",
sampleNames$ID[i], ".f.bam", sep = ""),
"wait",
paste0("picard AddOrReplaceReadGroups I=../samtools_filter_Out/", sampleNames$ID[i],
".f.bam O=../labeled_bam_Out/", sampleNames$ID[i], ".f.rg.bam RGID=",
sampleNames$ID[i], " RGSM=",  sampleNames$ID[i],
" RGPL=Illumina RGLB=lib1 RGPU=unit1")
), fileConn)
}
