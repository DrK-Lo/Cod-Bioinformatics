strsplit(df.samples$SampleID, split = c(1:2, 4:6))
df.samples$SampleID
?substring
substr(df.samples$SampleID, start= c(1,4), stop= c(2, 6))
substr(df.samples$SampleID, start= 1, stop= 2)
substr(df.samples$SampleID, start = 4, stop = 6)
year00 <- substr(df.samples$SampleID, start= 1, stop= 2)
sample000 <- substr(df.samples$SampleID, start = 4, stop = 6)
paste(year00, sample000)
c(year00, sample000)
paste(year00, sample000)
?paste
paste(year00, sample000, sep = "")
df.samples$Sample5digit <- paste(year00, sample000, sep = "")
df.popIDs <- read.csv("Population_IDs.csv")
df.popIDs
df.popIDs <- read.csv("Population_IDs.csv")
df.popIDs
i <- 1
j <- 1
paste(df.popIDs$PopLoc[i], "_", df.samples$Sample5digit, sep = "")
paste(df.popIDs$PopLoc[i], "_", df.samples$Sample5digit[j], sep = "")
paste(df.popIDs$PopLoc[i], "_", df.samples$Sample5digit[j], ".1.fq.gz", sep = "")
df.samples <- read.csv("SequencePlateOrder_updates.csv")
head(df.samples)
str(df.samples)
df.popIDs <- read.csv("Population_IDs.csv")
df.popIDs
year00 <- substr(df.samples$SampleID, start= 1, stop= 2)
sample000 <- substr(df.samples$SampleID, start = 4, stop = 6)
df.samples$Sample5digit <- paste(year00, sample000, sep = "")
for(i in 1:nrow(df.popIDs)){
for(j in 1:nrow(df.samples)){
if(df.popIDs$PopLoc[i] == df.samples$Population[j]){
df.samples$file_name_R1[j] <- paste(df.popIDs$PopLoc[i], "_", df.samples$Sample5digit[j], ".1.fq.gz", sep = "")
df.samples$file_name_R2[j] <- paste(df.popIDs$PopLoc[i], "_", df.samples$Sample5digit[j], ".2.fq.gz", sep = "")
df.samples$file_name_R1rem[j] <- paste(df.popIDs$PopLoc[i], "_", df.samples$Sample5digit[j], ".rem.1.fq.gz", sep = "")
df.samples$file_name_R2rem[j] <- paste(df.popIDs$PopLoc[i], "_", df.samples$Sample5digit[j], ".rem.2.fq.gz", sep = "")
}
}
}
warnings()
head(df.samples)
levels(df.samples$Population)
levels(df.popIDs)
levels(df.popIDs$PopLoc)
df.popIDs <- read.csv("Population_IDs.csv")
levels(df.popIDs$PopLoc)
df.popIDs <- read.csv("Population_IDs.csv")
levels(df.popIDs$PopLoc)
levels(df.popIDs$PopLoc)
levels(df.samples$Population)
df.popIDs <- read.csv("Population_IDs.csv")
levels(df.samples$Population)
levels(df.popIDs$PopLoc)
levels(df.popIDs$PopLoc) == levels(df.samples$Population)
df.samples <- read.csv("SequencePlateOrder_updates.csv")
head(df.samples)
str(df.samples)
df.popIDs <- read.csv("Population_IDs.csv")
df.popIDs
year00 <- substr(df.samples$SampleID, start= 1, stop= 2)
sample000 <- substr(df.samples$SampleID, start = 4, stop = 6)
df.samples$Sample5digit <- paste(year00, sample000, sep = "")
for(i in 1:nrow(df.popIDs)){
for(j in 1:nrow(df.samples)){
if(df.popIDs$PopLoc[i] == df.samples$Population[j]){
df.samples$file_name_R1[j] <- paste(df.popIDs$PopLoc[i], "_", df.samples$Sample5digit[j], ".1.fq.gz", sep = "")
df.samples$file_name_R2[j] <- paste(df.popIDs$PopLoc[i], "_", df.samples$Sample5digit[j], ".2.fq.gz", sep = "")
df.samples$file_name_R1rem[j] <- paste(df.popIDs$PopLoc[i], "_", df.samples$Sample5digit[j], ".rem.1.fq.gz", sep = "")
df.samples$file_name_R2rem[j] <- paste(df.popIDs$PopLoc[i], "_", df.samples$Sample5digit[j], ".rem.2.fq.gz", sep = "")
}
}
}
head(df.samples)
tail(df.samples)
warnings()
df.popIDs$PopLoc[i]
i <- 1
j <- 1
df.popIDs$PopLoc[i]
df.samples$Sample5digit[j]
df.popIDs$PopLoc[i]
df.samples$Population[j]
df.popIDs$PopLoc[i] == df.samples$Population[j]
j <- 2
df.popIDs$PopLoc[i] == df.samples$Population[j]
df.samples$Population[j]
j <- 3
df.popIDs$PopLoc[i] == df.samples$Population[j]
df.samples$Population[j]
j <- 4
df.popIDs$PopLoc[i] == df.samples$Population[j]
df.samples$file_name_R1[j] <- paste(df.popIDs$PopLoc[i], "_", df.samples$Sample5digit[j], ".1.fq.gz", sep = "")
df.popIDs$PopLoc[i] == df.samples$Population[j]
df.popIDs$PopLoc[i]
df.samples$Sample5digit[j]
df.samples$file_name_R1[j]
df.samples <- read.csv("SequencePlateOrder_updates.csv")
head(df.samples)
str(df.samples)
df.popIDs <- read.csv("Population_IDs.csv")
df.popIDs
year00 <- substr(df.samples$SampleID, start= 1, stop= 2)
sample000 <- substr(df.samples$SampleID, start = 4, stop = 6)
df.samples$Sample5digit <- paste(year00, sample000, sep = "")
for(i in 1:nrow(df.popIDs)){
for(j in 1:nrow(df.samples)){
if(df.popIDs$PopLoc[i] == df.samples$Population[j]){
df.samples$file_name_R1[j] <- paste(df.popIDs$PopLoc[i], "_", df.samples$Sample5digit[j], ".1.fq.gz", sep = "")
df.samples$file_name_R2[j] <- paste(df.popIDs$PopLoc[i], "_", df.samples$Sample5digit[j], ".2.fq.gz", sep = "")
df.samples$file_name_R1rem[j] <- paste(df.popIDs$PopLoc[i], "_", df.samples$Sample5digit[j], ".rem.1.fq.gz", sep = "")
df.samples$file_name_R2rem[j] <- paste(df.popIDs$PopLoc[i], "_", df.samples$Sample5digit[j], ".rem.2.fq.gz", sep = "")
}
}
}
warnings()
head(df.samples)
df.samples <- read.csv("SequencePlateOrder_updates.csv")
head(df.samples)
str(df.samples)
df.popIDs <- read.csv("Population_IDs.csv")
df.popIDs
year00 <- substr(df.samples$SampleID, start= 1, stop= 2)
sample000 <- substr(df.samples$SampleID, start = 4, stop = 6)
df.samples$Sample5digit <- paste(year00, sample000, sep = "")
head(df.samples)
df.samples <- read.csv("SequencePlateOrder_updates.csv")
head(df.samples)
str(df.samples)
df.popIDs <- read.csv("Population_IDs.csv")
df.popIDs
year00 <- substr(df.samples$SampleID, start= 1, stop= 2)
sample000 <- substr(df.samples$SampleID, start = 4, stop = 6)
df.samples$Sample5digit <- paste(year00, sample000, sep = "")
head(df.samples)
for(i in 1:nrow(df.popIDs)){
for(j in 1:nrow(df.samples)){
if(df.popIDs$PopLoc[i] == df.samples$Population[j]){
df.samples$file_name_R1[j] <- paste(df.popIDs$PopLoc[i], "_", df.samples$Sample5digit[j], ".1.fq.gz", sep = "")
df.samples$file_name_R2[j] <- paste(df.popIDs$PopLoc[i], "_", df.samples$Sample5digit[j], ".2.fq.gz", sep = "")
df.samples$file_name_R1rem[j] <- paste(df.popIDs$PopLoc[i], "_", df.samples$Sample5digit[j], ".rem.1.fq.gz", sep = "")
df.samples$file_name_R2rem[j] <- paste(df.popIDs$PopLoc[i], "_", df.samples$Sample5digit[j], ".rem.2.fq.gz", sep = "")
}
}
}
head(df.samples)
for(i in 1:nrow(df.popIDs)){
for(j in 1:nrow(df.samples)){
if(df.popIDs$PopLoc[i] == df.samples$Population[j]){
df.samples$file_name_R1[j] <- paste(df.popIDs$PopID[i], "_", df.samples$Sample5digit[j], ".1.fq.gz", sep = "")
df.samples$file_name_R2[j] <- paste(df.popIDs$PopID[i], "_", df.samples$Sample5digit[j], ".2.fq.gz", sep = "")
df.samples$file_name_R1rem[j] <- paste(df.popIDs$PopID[i], "_", df.samples$Sample5digit[j], ".rem.1.fq.gz", sep = "")
df.samples$file_name_R2rem[j] <- paste(df.popIDs$PopID[i], "_", df.samples$Sample5digit[j], ".rem.2.fq.gz", sep = "")
}
}
}
head(df.samples)
paste("barcodeFilei5", df.samples$i5.Primer[i], "_i7", df.samples$i7.Primer[i], ".txt", sep = "")
unique(paste(df.samples$i5.Primer, df.samples$i7.Primer, sep = ""))
primer_combos <- unique(paste(df.samples$i5.Primer, df.samples$i7.Primer, sep = ""))
paste(df.samples$i5.Primer[j], df.samples$i7.Primer[j], sep = "")
primer_combos
file.name <- paste("barcodeFilei5", df.samples$i5.Primer[i], "_i7", df.samples$i7.Primer[i], ".txt", sep = "")
head(df.samples)
df.samples <- read.csv("SequencePlateOrder_updates.csv")
head(df.samples)
str(df.samples)
df.popIDs <- read.csv("Population_IDs.csv")
df.popIDs
year00 <- substr(df.samples$SampleID, start= 1, stop= 2)
sample000 <- substr(df.samples$SampleID, start = 4, stop = 6)
df.samples$Sample5digit <- paste(year00, sample000, sep = "")
for(i in 1:nrow(df.popIDs)){
for(j in 1:nrow(df.samples)){
if(df.popIDs$PopLoc[i] == df.samples$Population[j]){
df.samples$file_name_R1[j] <- paste(df.popIDs$PopID[i], "_", df.samples$Sample5digit[j], ".1.fq.gz", sep = "")
df.samples$file_name_R2[j] <- paste(df.popIDs$PopID[i], "_", df.samples$Sample5digit[j], ".2.fq.gz", sep = "")
df.samples$file_name_R1rem[j] <- paste(df.popIDs$PopID[i], "_", df.samples$Sample5digit[j], ".rem.1.fq.gz", sep = "")
df.samples$file_name_R2rem[j] <- paste(df.popIDs$PopID[i], "_", df.samples$Sample5digit[j], ".rem.2.fq.gz", sep = "")
df.samples$PopID <- paste(df.popIDs$PopID[i])
}
}
}
head(df.samples)
for(i in 1:nrow(df.popIDs)){
for(j in 1:nrow(df.samples)){
if(df.popIDs$PopLoc[i] == df.samples$Population[j]){
df.samples$file_name_R1[j] <- paste(df.popIDs$PopID[i], "_", df.samples$Sample5digit[j], ".1.fq.gz", sep = "")
df.samples$file_name_R2[j] <- paste(df.popIDs$PopID[i], "_", df.samples$Sample5digit[j], ".2.fq.gz", sep = "")
df.samples$file_name_R1rem[j] <- paste(df.popIDs$PopID[i], "_", df.samples$Sample5digit[j], ".rem.1.fq.gz", sep = "")
df.samples$file_name_R2rem[j] <- paste(df.popIDs$PopID[i], "_", df.samples$Sample5digit[j], ".rem.2.fq.gz", sep = "")
df.samples$PopID <- paste(df.popIDs$PopID[j])
}
}
}
head(df.samples)
df.popIDs$PopID[i]
for(i in 1:nrow(df.popIDs)){
for(j in 1:nrow(df.samples)){
if(df.popIDs$PopLoc[i] == df.samples$Population[j]){
df.samples$file_name_R1[j] <- paste(df.popIDs$PopID[i], "_", df.samples$Sample5digit[j], ".1.fq.gz", sep = "")
df.samples$file_name_R2[j] <- paste(df.popIDs$PopID[i], "_", df.samples$Sample5digit[j], ".2.fq.gz", sep = "")
df.samples$file_name_R1rem[j] <- paste(df.popIDs$PopID[i], "_", df.samples$Sample5digit[j], ".rem.1.fq.gz", sep = "")
df.samples$file_name_R2rem[j] <- paste(df.popIDs$PopID[i], "_", df.samples$Sample5digit[j], ".rem.2.fq.gz", sep = "")
df.samples$PopID[j] <- df.popIDs$PopID[i]
}
}
}
df.popIDs$PopID[i]
head(df.samples)
for(i in 1:nrow(df.popIDs)){
for(j in 1:nrow(df.samples)){
if(df.popIDs$PopLoc[i] == df.samples$Population[j]){
df.samples$file_name_R1[j] <- paste(df.popIDs$PopID[i], "_", df.samples$Sample5digit[j], ".1.fq.gz", sep = "")
df.samples$file_name_R2[j] <- paste(df.popIDs$PopID[i], "_", df.samples$Sample5digit[j], ".2.fq.gz", sep = "")
df.samples$file_name_R1rem[j] <- paste(df.popIDs$PopID[i], "_", df.samples$Sample5digit[j], ".rem.1.fq.gz", sep = "")
df.samples$file_name_R2rem[j] <- paste(df.popIDs$PopID[i], "_", df.samples$Sample5digit[j], ".rem.2.fq.gz", sep = "")
df.samples$PopID[j] <- paste(df.popIDs$PopID[i])
}
}
}
head(df.samples)
i <- 1
j <- 1
prim.combo.adapters <- NULL
population.id <- NULL
paste(df.samples$i5.Primer[j], df.samples$i7.Primer[j], sep = "") == primer_combos[i]
c(prim.combo.adapters, df.samples$adapter.sequence[j])
c(prim.combo.adapters, paste(df.samples$adapter.sequence[j]))
c(population.id, paste(df.samples$PopID[i]))
j <- 4
paste(df.samples$i5.Primer[j], df.samples$i7.Primer[j], sep = "") == primer_combos[i])
paste(df.samples$i5.Primer[j], df.samples$i7.Primer[j], sep = "") == primer_combos[i]
c(prim.combo.adapters, paste(df.samples$adapter.sequence[j]))
j <- 1
prim.combo.adapters <- c(prim.combo.adapters, paste(df.samples$adapter.sequence[j]))
prim.combo.adapters
j <- <- 4
j <- 4
prim.combo.adapters <- c(prim.combo.adapters, paste(df.samples$adapter.sequence[j]))
prim.combo.adapters
?write.csv
length(primer_combos[1])
install.packages("stringr")
library(stringr)
str_count(primer_combos[i])
primer_combos
i <- 27
str_count(primer_combos[i]) == 2
paste("barcodeFilei5", substr(primer_combos[i], start = 1, stop = 1), "_i7",
substr(primer_combos[i], start = 2, stop = 3), ".txt", sep = "")
prim.combo.adapters
population.id
i <- 1
paste(df.samples$i5.Primer[j], df.samples$i7.Primer[j], sep = "") == primer_combos[i]
population.id <- c(population.id, paste(df.samples$PopID[i]))
i <- 4
paste(df.samples$i5.Primer[j], df.samples$i7.Primer[j], sep = "") == primer_combos[i]
primer_combos[i]
primer_combos
i <- <-
i <- 1
j <- 1
paste(df.samples$i5.Primer[j], df.samples$i7.Primer[j], sep = "") == primer_combos[i]
prim.combo.adapters <- NULL
population.id <- NULL
prim.combo.adapters <- c(prim.combo.adapters, paste(df.samples$adapter.sequence[j]))
population.id <- c(population.id, paste(df.samples$PopID[i]))
j <- 4
paste(df.samples$i5.Primer[j], df.samples$i7.Primer[j], sep = "") == primer_combos[i]
prim.combo.adapters <- c(prim.combo.adapters, paste(df.samples$adapter.sequence[j]))
population.id <- c(population.id, paste(df.samples$PopID[i]))
prim.combo.adapters
population.id
paste(df.samples$PopID[j])
prim.combo.adapters <- NULL
population.id <- NULL
j <- 1
prim.combo.adapters <- c(prim.combo.adapters, paste(df.samples$adapter.sequence[j]))
population.id <- c(population.id, paste(df.samples$PopID[j]))
j <- 4
prim.combo.adapters <- c(prim.combo.adapters, paste(df.samples$adapter.sequence[j]))
population.id <- c(population.id, paste(df.samples$PopID[j]))
prim.combo.adapters
population.id
i
j
data.frame(prim.combo.adapters, prim.combo.adapters, paste(population.id, "_", ind.id))
ind.id <- NULL
j <- 1
ind.id <- c(ind.id, paste(df.samples$Sample5digit[j]))
j <- 4
ind.id <- c(ind.id, paste(df.samples$Sample5digit[j]))
data.frame(prim.combo.adapters, prim.combo.adapters, paste(population.id, "_", ind.id))
matrix(prim.combo.adapters, prim.combo.adapters, paste(population.id, "_", ind.id))
?table
data.frame(prim.combo.adapters, prim.combo.adapters, paste(population.id, "_", ind.id))
data.frame(prim.combo.adapters, prim.combo.adapters, paste(population.id, "_", ind.id, sep = ""))
barcodetable <- data.frame(prim.combo.adapters, prim.combo.adapters, paste(population.id, "_", ind.id, sep = ""))
colnames(barcodetable) <- NULL
barcodetable
getwd()
ls()
df.samples
barcodetable
getwd()
paste("/BarcodeFiles/", file.name
)
paste("/BarcodeFiles/", file.name, sep = "")
write.csv(barcodetable, file = paste("/BarcodeFiles/", file.name, sep = ""))
write.csv(barcodetable, file = paste("BarcodeFiles/", file.name, sep = ""))
?write.csv
write.csv(barcodetable, file = paste("BarcodeFiles/", file.name, sep = ""), sep = "\t")
write.csv(barcodetable, file = paste("BarcodeFiles/", file.name, sep = ""), sep = "\t", col.names = FALSE,
row.names = FALSE)
barcodetable <- data.frame(prim.combo.adapters, prim.combo.adapters, paste(population.id, "_", ind.id, sep = ""))
colnames(barcodetable) <- NULL
barcodetable
rownames(barcodetable) <- NULL
barcodetable
write.csv(barcodetable, file = paste("BarcodeFiles/", file.name, sep = ""), sep = "\t", col.names = FALSE,
row.names = FALSE)
write.table(barcodetable, file = paste("BarcodeFiles/", file.name, sep = ""), sep = "\t", col.names = FALSE,
row.names = FALSE)
as.factor(barcodetable)
write.table(barcodetable, file = paste("BarcodeFiles/", file.name, sep = ""), sep = "\t", col.names = FALSE,
row.names = FALSE, quote = FALSE)
primer_combos
for(i in 1:length(primer_combos)){
prim.combo.adapters <- NULL
population.id <- NULL
ind.id <- NULL
if(str_count(primer_combos[i]) == 2){
file.name <- paste("barcodeFilei5", substr(primer_combos[i], start = 1, stop = 1), "_i7",
substr(primer_combos[i], start = 2, stop = 2), ".txt", sep = "")
} else {
file.name <- paste("barcodeFilei5", substr(primer_combos[i], start = 1, stop = 1), "_i7",
substr(primer_combos[i], start = 2, stop = 3), ".txt", sep = "")
}
for(j in 1:nrow(df.samples)){
if(paste(df.samples$i5.Primer[j], df.samples$i7.Primer[j], sep = "") == primer_combos[i]){
prim.combo.adapters <- c(prim.combo.adapters, paste(df.samples$adapter.sequence[j]))
population.id <- c(population.id, paste(df.samples$PopID[j]))
ind.id <- c(ind.id, paste(df.samples$Sample5digit[j]))
}
}
barcodetable <- data.frame(prim.combo.adapters, prim.combo.adapters, paste(population.id, "_", ind.id, sep = ""))
colnames(barcodetable) <- NULL
rownames(barcodetable) <- NULL
write.table(barcodetable, file = paste("BarcodeFiles/", file.name, sep = ""), sep = "\t", col.names = FALSE,
row.names = FALSE, quote = FALSE)
}
df.samples <- read.csv("SequencePlateOrder_updates.csv")
year00 <- substr(df.samples$SampleID, start= 1, stop= 2)
sample000 <- substr(df.samples$SampleID, start = 4, stop = 6)
df.samples$Sample5digit <- paste(year00, sample000, sep = "")
for(i in 1:nrow(df.popIDs)){
for(j in 1:nrow(df.samples)){
if(df.popIDs$PopLoc[i] == df.samples$Population[j]){
df.samples$file_name_R1[j] <- paste(df.popIDs$PopID[i], "_", df.samples$Sample5digit[j], ".1.fq.gz", sep = "")
df.samples$file_name_R2[j] <- paste(df.popIDs$PopID[i], "_", df.samples$Sample5digit[j], ".2.fq.gz", sep = "")
df.samples$file_name_R1rem[j] <- paste(df.popIDs$PopID[i], "_", df.samples$Sample5digit[j], ".rem.1.fq.gz", sep = "")
df.samples$file_name_R2rem[j] <- paste(df.popIDs$PopID[i], "_", df.samples$Sample5digit[j], ".rem.2.fq.gz", sep = "")
df.samples$PopID[j] <- paste(df.popIDs$PopID[i])
}
}
}
df.popIDs <- read.csv("Population_IDs.csv")
df.popIDs
year00 <- substr(df.samples$SampleID, start= 1, stop= 2)
sample000 <- substr(df.samples$SampleID, start = 4, stop = 6)
df.samples$Sample5digit <- paste(year00, sample000, sep = "")
for(i in 1:nrow(df.popIDs)){
for(j in 1:nrow(df.samples)){
if(df.popIDs$PopLoc[i] == df.samples$Population[j]){
df.samples$file_name_R1[j] <- paste(df.popIDs$PopID[i], "_", df.samples$Sample5digit[j], ".1.fq.gz", sep = "")
df.samples$file_name_R2[j] <- paste(df.popIDs$PopID[i], "_", df.samples$Sample5digit[j], ".2.fq.gz", sep = "")
df.samples$file_name_R1rem[j] <- paste(df.popIDs$PopID[i], "_", df.samples$Sample5digit[j], ".rem.1.fq.gz", sep = "")
df.samples$file_name_R2rem[j] <- paste(df.popIDs$PopID[i], "_", df.samples$Sample5digit[j], ".rem.2.fq.gz", sep = "")
df.samples$PopID[j] <- paste(df.popIDs$PopID[i])
}
}
}
df.samples
df.samples <- read.csv("SequencePlateOrder_updates.csv")
head(df.samples)
df.popIDs <- read.csv("Population_IDs.csv")
df.popIDs
year00 <- substr(df.samples$SampleID, start= 1, stop= 2)
sample000 <- substr(df.samples$SampleID, start = 4, stop = 6)
df.samples$Sample5digit <- paste(year00, sample000, sep = "")
for(i in 1:nrow(df.popIDs)){
for(j in 1:nrow(df.samples)){
if(df.popIDs$PopLoc[i] == df.samples$Population[j]){
df.samples$file_name_R1[j] <- paste(df.popIDs$PopID[i], "_", df.samples$Sample5digit[j], ".1.fq.gz", sep = "")
df.samples$file_name_R2[j] <- paste(df.popIDs$PopID[i], "_", df.samples$Sample5digit[j], ".2.fq.gz", sep = "")
df.samples$file_name_R1rem[j] <- paste(df.popIDs$PopID[i], "_", df.samples$Sample5digit[j], ".rem.1.fq.gz", sep = "")
df.samples$file_name_R2rem[j] <- paste(df.popIDs$PopID[i], "_", df.samples$Sample5digit[j], ".rem.2.fq.gz", sep = "")
df.samples$PopID[j] <- paste(df.popIDs$PopID[i])
}
}
}
nrow(df.popIDs)
nrow(df.samples)
df.samples$Population
knitr::opts_chunk$set(echo = TRUE)
# Libraries
#install.packages("hexbin")
#install.packages("plotly")
library(plotly)
library(reshape2)
library(viridisLite)
library(cowplot)
install.packages("plotly")
# Libraries
#install.packages("hexbin")
#install.packages("plotly")
library(plotly)
h = 0 # dominance coefficient = 0 = additive
p_0 = 0.1 # Starting frequency of favored allele
p_t = 0.5 # Final frequency of favored allele
# Equation
t_gen = (1)* log((p_t*(1-p_0))/(p_0*(1-p_t)))
# Number of generations given selection coefficient (s)
## Function
# This function requires three arguements:
# p_0 : Initial allele frequency : Values 0-1
# p_t : Final allele frequency : Values 0-1
# fitness_type : Allele interaction : 'Additive','dominant','recessive'
gen_time <- function(p_0=0.1,p_t=0.9,fitness_type = "additive"){
if(fitness_type == "additive"){
t_gen = (1)* log((p_t*(1-p_0))/(p_0*(1-p_t)))
}else{
if(fitness_type == "dominant"){
t_gen = 0.5 *(log((p_t*(1-p_0))/(p_0*(1-p_t)))+(1/(1-p_t))-(1/(1-p_0)))
}else{
if(fitness_type == "recessive"){
t_gen = 0.5 *(log((p_t*(1-p_0))/(p_0*(1-p_t)))-(1/p_t)+(1/p_0))
}else{
return(print("Incorrect fitness_type specified. Please use either 'additive','dominance',or 'recessive'"))
}
}
}
return(t_gen)
}
# Calculating generations for recessive allele to go from frequency of 0.1
# to 0.7
rec = gen_time(p_0=0.1,p_t=0.5,fitness_type="recessive")
# Calculating generations for dominant allele to go from frequency of 0.4
# to 0.8
dom = gen_time(p_0=0.1,p_t=0.5,fitness_type="dominant")
p_0 = seq(0.1,0.9,by=0.01) # Range of starting frequencies
p_t = seq(0.1,0.9,by=0.01) # Range of end frequencies
p_frequencies = expand.grid(p_0,p_t)
colnames(p_frequencies) = c("p_0","p_t") # Relabel data.frame
p_frequencies = p_frequencies[p_frequencies$p_t-p_frequencies$p_0 > 0,] # Remove cases where p_t is lower than p_0
# Additive
p_frequencies$gen_add <- gen_time(p_frequencies$p_0,p_frequencies$p_t)
# Recessive
p_frequencies$gen_rec <- gen_time(p_frequencies$p_0,p_frequencies$p_t,
fitness_type = "recessive")
# Dominant
p_frequencies$gen_dom <- gen_time(p_frequencies$p_0,p_frequencies$p_t,
fitness_type = "dominant")
# Coverting generation estimates into data.frame matrices
p_frequencies_add_wide <- dcast(p_frequencies, p_0 ~ p_t, value.var="gen_add")[,-1]
p_frequencies_rec_wide <- dcast(p_frequencies, p_0 ~ p_t, value.var="gen_rec")[,-1]
p_frequencies_dom_wide <- dcast(p_frequencies, p_0 ~ p_t, value.var="gen_dom")[,-1]
# Converting data.frame objects into matrix objects
p_frequencies_add <- data.matrix(p_frequencies_add_wide)
p_frequencies_rec <- data.matrix(p_frequencies_rec_wide)
p_frequencies_dom <- data.matrix(p_frequencies_dom_wide)
pA <- ggplot(p_frequencies,aes(p_0,p_t, fill= gen_add)) +
geom_tile() + labs(title="Additive",fill="Gen Time (s-1)") +
scale_fill_viridis_c(option="plasma",limit=c(0,6.5)) +
theme_cowplot()
pR <- ggplot(p_frequencies,aes(p_0,p_t, fill= gen_rec)) +
geom_tile() + labs(title="Recessive",fill="Gen Time (s-1)") +
scale_fill_viridis_c(option="plasma",limit=c(0,6.5)) +
theme_cowplot()
pD <- ggplot(p_frequencies,aes(p_0,p_t, fill= gen_dom)) +
geom_tile() + labs(title="Dominant",fill="Gen Time (s-1)") +
scale_fill_viridis_c(option="plasma",limit=c(0,6.5)) +
theme_cowplot()
plot_grid(pA,pR,pD,ncol=1)
## Labels
ax <- list(
title = "P_t"
)
ay <- list(
title = "P_0"
)
az <- list(
title = "Generation s-1"
)
## Additive
fig_add <- plot_ly(y = unique(p_frequencies$p_0),
x = unique(p_frequencies$p_t),
z = p_frequencies_add) %>% add_surface(
contours = list(
z = list(
show=TRUE,
usecolormap=TRUE,
highlightcolor="#ff0000",
project=list(z=TRUE)
)
)
) %>%
layout(title = "Additive",
scene = list(xaxis=ax,yaxis=ay,zaxis=az))
fig_add
